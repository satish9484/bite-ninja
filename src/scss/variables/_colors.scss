@use "sass:map";

// =============================================================================
// Color Tokens and Theming (Palette + Semantic Roles)
// - All tokens use !default for theme overrides via `@use ... with (...)`
// - Role-based API: use color("role") for future-proof theming
// =============================================================================

// Palette: Primary
$primary-50: #e6f4ff !default;
$primary-100: #bae0ff !default;
$primary-200: #91caff !default;
$primary-300: #69b1ff !default;
$primary-400: #4096ff !default;
$primary-500: #1677ff !default; // Main theme color
$primary-600: #0958d9 !default;
$primary-700: #004fc4 !default;
$primary-800: #003eb3 !default;
$primary-900: #002c8c !default;

// Palette: Neutral (grays)
$neutral-50: #fafafa !default;
$neutral-100: #f5f5f5 !default;
$neutral-200: #f0f0f0 !default;
$neutral-300: #d9d9d9 !default;
$neutral-400: #bfbfbf !default;
$neutral-500: #8c8c8c !default;
$neutral-600: #595959 !default;
$neutral-700: #434343 !default;
$neutral-800: #262626 !default;
$neutral-900: #1f1f1f !default;

// Palette: Semantic scales
$success-50: #f6ffed !default;
$success-100: #d9f7be !default;
$success-200: #b7eb8f !default;
$success-300: #95de64 !default;
$success-400: #73d13d !default;
$success-500: #52c41a !default;
$success-600: #389e0d !default;
$success-700: #237804 !default;
$success-800: #135200 !default;
$success-900: #092b00 !default;

$warning-50: #fffbe6 !default;
$warning-100: #fff1b8 !default;
$warning-200: #ffe58f !default;
$warning-300: #ffd666 !default;
$warning-400: #ffc53d !default;
$warning-500: #faad14 !default;
$warning-600: #d48806 !default;
$warning-700: #ad4e00 !default;
$warning-800: #873800 !default;
$warning-900: #612500 !default;

$error-50: #fff2f0 !default;
$error-100: #ffccc7 !default;
$error-200: #ffa39e !default;
$error-300: #ff7875 !default;
$error-400: #ff4d4f !default;
$error-500: #f5222d !default;
$error-600: #cf1322 !default;
$error-700: #a8071a !default;
$error-800: #820014 !default;
$error-900: #5c0011 !default;

$info-50: #e6f7ff !default;
$info-100: #bae7ff !default;
$info-200: #91d5ff !default;
$info-300: #69c0ff !default;
$info-400: #40a9ff !default;
$info-500: #1890ff !default;
$info-600: #096dd9 !default;
$info-700: #0050b3 !default;
$info-800: #003a8c !default;
$info-900: #002766 !default;

// Palette: Accent
$accent-50: #f0f9ff !default;
$accent-100: #e0f2fe !default;
$accent-200: #bae6fd !default;
$accent-300: #7dd3fc !default;
$accent-400: #38bdf8 !default;
$accent-500: #0ea5e9 !default; // Main accent color
$accent-600: #0284c7 !default;
$accent-700: #0369a1 !default;
$accent-800: #075985 !default;
$accent-900: #0c4a6e !default;

// Palette: Orange (legacy/back-compat and specific use cases)
$orange-50: #fff7ed !default;
$orange-100: #ffedd5 !default;
$orange-200: #fed7aa !default;
$orange-300: #fdba74 !default;
$orange-400: #fb923c !default;
$orange-500: #f97316 !default;
$orange-600: #ea580c !default;
$orange-700: #c2410c !default;
$orange-800: #9a3412 !default;
$orange-900: #7c2d12 !default;

// Palette: Food/Restaurant Theme (for dark hero section)
$food-bg-dark: #0a0a0a !default; // Near-black background
$food-bg-pure-black: #000000 !default; // Pure black
$food-accent-coral: #ff4c3b !default; // Chef's special coral/red
$food-accent-orange: #df6025 !default; // Warm orange accent
$food-text-light: #ffffff !default; // Pure white text
$food-text-cream: #f5f5dc !default; // Cream/beige for subtle text
$food-text-gray-light: #e0e0e0 !default; // Light gray for secondary text
$food-title-light: #5f4546 !default; // Brown/red-brown for light theme title
$food-title-dark: #cd0008 !default; // Deep red for dark theme title

// Backward-compat palette aliases
$white: $neutral-50 !default;
$black: $neutral-900 !default;
$grey: $neutral-500 !default;

// =============================================================================
// Semantic Roles
// Use these in components instead of raw palette tokens
// =============================================================================

// Role keys set (documented for reference)
// primary, primary-contrast, background, surface, surface-2,
// text-primary, text-secondary, text-inverse, border, ring,
// link, link-hover, success, success-contrast, warning, error, info,
// muted, accent, accent-contrast

// Light theme role map
$theme-light: (
  primary: $primary-600,
  primary-contrast: $white,
  background: $neutral-50,
  surface: $white,
  surface-2: $neutral-100,
  text-primary: $neutral-900,
  text-secondary: $neutral-600,
  text-inverse: $white,
  border: $neutral-200,
  ring: $neutral-300,
  link: $primary-600,
  link-hover: $primary-700,
  success: $success-600,
  success-contrast: $white,
  warning: $warning-600,
  error: $error-600,
  info: $info-600,
  muted: $neutral-500,
  accent: $accent-500,
  accent-contrast: $white,
) !default;

// Dark theme role map
$theme-dark: (
  primary: $primary-500,
  primary-contrast: $black,
  background: $neutral-900,
  surface: $neutral-800,
  surface-2: $neutral-700,
  text-primary: $neutral-50,
  text-secondary: $neutral-300,
  text-inverse: $black,
  border: $neutral-700,
  ring: $neutral-600,
  link: $primary-400,
  link-hover: $primary-300,
  success: $success-400,
  success-contrast: $black,
  warning: $warning-400,
  error: $error-400,
  info: $info-400,
  muted: $neutral-400,
  accent: $accent-400,
  accent-contrast: $black,
) !default;

// Backward-compat role aliases
$theme-color: map.get($theme-light, primary) !default;
$theme-light-alias: $primary-50 !default; // legacy
$theme-dark-alias: $neutral-900 !default; // legacy
$placeholder-color: $neutral-400 !default;
$btnsecondary-bg: $neutral-200 !default;
$success: $success-500 !default;
$danger: $error-500 !default;
$warning: $warning-500 !default;
$info: $info-500 !default;

// Legacy text tokens (kept for compatibility; prefer role keys)
$color-text-primary: map.get($theme-light, text-primary) !default;
$color-text-secondary: map.get($theme-light, text-secondary) !default;
$color-background: map.get($theme-light, background) !default;

// =============================================================================
// Helpers: role lookup and CSS variable emission
// =============================================================================

@function theme-role($role, $mode: light) {
  $map: if($mode == dark, $theme-dark, $theme-light);
  @return map.get($map, $role);
}

// color("primary") -> var(--color-primary, <light-fallback>)
@function color($role, $mode: light) {
  $fallback: theme-role($role, $mode);
  @return var(--color-#{$role}, #{$fallback});
}

// Emit CSS variables for a theme map under a selector
@mixin emit-theme-css-variables($selector: ":root", $mode: light) {
  $map: if($mode == dark, $theme-dark, $theme-light);
  #{$selector} {
    @each $key, $value in $map {
      --color-#{$key}: #{$value};
    }
  }
}
